Software for browsing, sorting, and subsetting pre-generated images in a web browser.  It is an out-growth of the [http://virbo.org/ ViRBO] project.

[http://viviz.org/gallery/ Demo page]

= Use =

If remote images are available from an HTTP address and the filenames follow a simple pattern, the images may be viewed by appending parameters to the URL <code><nowiki>http://viviz.org/gallery/#</code>.  For alternative installations, including for viewing local images, see [[#Installation|Installation]].

The files <code>demo-2001.png</code>, <code>demo-2002.png</code>, <code>demo-2003.png</code>, <code>demo-2004.png</code> in http://viviz.org/gallery/images/full/ can be viewed using

<pre>
 http://viviz.org/gallery/#dir=http://viviz.org/gallery/images/full/&strftime=demo-$Y.png&start=2001&stop=2004
</pre>
or
<pre>
 http://viviz.org/gallery/#dir=images/full/&strftime=demo-$Y.png&start=2001&stop=2004
</pre>

A thumbnail directory can be specified for improved load time:

<pre>
 http://viviz.org/gallery/#fulldir=images/full/&thumbdir=../thumb/&strftime=demo-$Y.png&start=2001&stop=2004
</pre>
or
<pre>
 http://viviz.org/gallery/#fulldir=images/full/&thumbdir=images/thumb/&strftime=demo-$Y.png&start=2001&stop=2004
</pre>


= Performance Hints =

* Use thumbnail images.
* Use interlaced PNG encoding for large full-sized images.
* Use [https://pngquant.org/ PNGQuant] for compressing PNG images.

= Installation =

== Basic ==

* Open http://viviz.org/gallery/index.htm
* Select <code>File > Save As > index.htm</code>
or
* <code>curl -O <nowiki>http://viviz.org/gallery/index.htm</nowiki></code>
* Open the saved <code>index.htm</code> file in a web browser

To configure,
* Modify one of the gallery configuration examples at the top of <code>index.htm</code> with a text editor. 
or
* Append arguments to <code>index.htm</code>, e.g., 
:<code>index.htm#dir=file:///path/to/images/&strftime=...&start=...&stop=...</
:<code>index.htm#dir=http:///server/path/to/images/&strftime=...&start=...&stop=...</code
code>

== Web Server ==

In this mode, directories for the location of the full directory may be relative and the parameters <code>fulllist</code> and <code>thumblist</code> may be relative paths.  For absolute URLs, a [[#Full Application]] installation is required.

 curl http://viviz.org/gallery/index.htm > /server/root/dir/index.htm
or
 git pull http://github.com/rweigel/viviz

== Full Application ==

The full application includes a web server and a proxy server that retrieves remote file lists and remote catalogs and requires installation of [http://node.js/ Node].

 git pull http://github.com/rweigel/viviz
 cd viviz
 npm install
 node viviz.js --port 8002

and open http://localhost:8002/ with a web browser.

== Configuration ==

The variable <code>VIVIZ</code> in <code>index.htm</code> contains all of the application and gallery configuation options.

To see the gallery configuation for the gallery in view, select the Gallery configuration link.  See also <code>index.htm</code> for many examples of gallery configurations.

Any configuration option that appears in <code>VIVIZ["config"]</code> is over-ridden by a same-named option that appears in a gallery configuation or a parameter in the query string.

The main configuration parameters for a gallery are
* <code>fulldir</code> or <code>dir</code>: A URL to the location of full-sized image files (default is same directory of index.html)
* <code>thumbdir</code>: A URL to the location of reduced-size versions of the full-sized images (default is <code>fulldir</code>).
* <code>fullfiles</code> or <code>files</code>: A list of filenames that are appended to <code>fulldir</code>.
* <code>thumbfiles</code>: A list of filenames that are appended to <code>thumbdir</code> (default is <code>fullfiles</code>).  

The format of the lists is either as Javascript array of the form
 [["demo-2001.png"],["demo-2002.png"],["demo-2003.png"],["demo-2004.png"]]
or a new-line separated list
 "demo-2001.png\ndemo-2002.png\ndemo-2003.png\ndemo-2004.png"

When the list of files is long and the filenames have a pattern, the list of files can be represented by <code>sprintf</code> or <code>strftime</code> along with <code>start</code> and <code>stop</code> indices or dates.
* <code>sprintf</code> is a [http://linux.die.net/man/3/sprintf formatted string expression]]
* <code>strftime</code> is a [http://linux.die.net/man/3/strftime formatted time string expression]
* <code>start</code>: Either an integer or a date
* <code>stop</code>: Either an integer or a date

When the list of full- or reduced-size image files cannot be desribed using the above parameters, the lists can be specified using <code>list</code> or <code>script</code>, where
* <code>list</code> is a [[#File List|file]] containing a list of image file names and their attributes. (Only available for web server and full install; for web server install, paths must be relative.)
* <code>script</code> is a [[#Script|script]] that generates a list of files.

If any of the above parameters applies only to either the full- or reduced-sized images, the parameters should be prefixed by <code>full</code> or <code>thumb</code>, respectively.

== File List ==

Each image can have zero or more [[#Attributes|attributes]] that can be used to view a subset of the images.  The format is

 [
  ["file1.png", "attribute1", "attribute2", ..., "attributeM"],
  ...
  ["fileN.png", "attribute1", "attribute2", ..., "attributeM"]
 ]

where attributes that are numbers do not need to be quoted, or

  file1.png, attribute1, attribute2, ..., attributeM
  fileN.png, attribute1, attribute2, ..., attributeM

where all attributes are assumed to be strings unless they can be converted to floating point numbers.

== Script ==

Any Javascript code that can run in a browser is allowed and the functions [https://github.com/alexei/sprintf.js sprintf] and [http://hacks.bluesmoon.info/strftime/strftime strftime] are available.

The following three examples create the same list of four files.

<source lang="javascript">
<script>
	function () {
		files = []
		for (i = 0; i < 4; i++) {
			files[i] = ['demo-200' + (i+1) + '.png']
		}
		return files
	}
</script>
</source>

<source lang="javascript">
<script>
	function () {
		files = []
		for (i = 0; i < 4; i++) {
			files[i] = ['demo-' + sprintf('%02d',i+1) + '.png']
		}
		return files
	}
</script>
</source>

<source lang="javascript">
<script>
	function () {
		files = []
		for (i = 0; i < 4; i++) {
			files[i] = ['demo-' + strftime('%Y',2000+i+1) + '.png']
		}
		return files
	}
</script>
</source>

<h2>Attributes and Filters</h2>

* Each image can have zero or more attributes and each attribute can have zero or more filters that allow for showing only a subset of images. 
* Filters expressions can be either regular expressions (for string attributes) or logical expressions (for numeric attributes).  To refer to the value of the attribute in logical expressions, use the <code>this</code> keyword.

When <code>strftime</code> has a year pattern (<code>$Y</code>), a drop-down menu is automatically created that allows viewing all of the images or only one year of images.

 file1.png, "AB", 4.0
 file2.png, "BC", 5.0
 ...

[
	{
		"name": "Attribute 1",
		"filters":
			[
				{"name": "All", "value": ".*"},
				{"name": "Attribute 1 contains the letter C", "value": ".*C"},
			]
	},
	{
		"name": "Attribute 2",
		"unit": "nT&#183;hr",
		"format": "%.1f",
		"filters":
			[
				{"name": "All", "value": true},
				{"name": "Attribute 2 is greater than 4.0", "value": "this > 4.0"}
			]
	}
}